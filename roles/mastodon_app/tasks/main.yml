---
- ansible.builtin.import_tasks: user.yml
- ansible.builtin.import_tasks: nodejs.yml
- ansible.builtin.import_tasks: pgbouncer.yml

- name: Install mastodon dependencies
  ansible.builtin.apt:
    name:
      # generic build tools
      - ruby
      - ruby-dev
      - gcc
      - build-essential
      - g++
      - protobuf-compiler
      - autoconf
      - bison
      # unused (?) gem dependencies
      - libxml2-dev
      - libxslt1-dev
      - libgdbm-dev
      - libreadline-dev
      - libprotobuf-dev
      - libssl-dev
      - libyaml-dev
      - libffi-dev
      # gem dependencies
      - libicu-dev
      - libjemalloc-dev
      - zlib1g-dev
      - libidn11-dev
      - libpq-dev
      # tools
      - imagemagick
      - ffmpeg
      - file
      # ansible helpers
      - python3-psycopg2
    state: present

- name: Install bundler
  ansible.builtin.command: gem install bundler
  args:
    creates: /usr/local/bin/bundle

- name: Download mastodon
  ansible.builtin.unarchive:
    src: https://github.com/mastodon/mastodon/archive/refs/tags/v{{ mastodon_app_version }}.tar.gz
    remote_src: true
    dest: /home/mastodon
    creates: /home/mastodon/mastodon-{{ mastodon_app_version }}
  become_user: mastodon

- name: Symlink mastodon live
  ansible.builtin.file:
    src: /home/mastodon/mastodon-{{ mastodon_app_version }}
    dest: /home/mastodon/live
    state: link
    owner: mastodon

- name: Create config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: mastodon
    group: mastodon
  loop:
    - /etc/mastodon
    - /home/mastodon/live/.bundle

- name: Configure bundler
  ansible.builtin.copy:
    src: bundle_config
    dest: /home/mastodon/live/.bundle/config

- name: Create mastodon envfile
  ansible.builtin.template:
    src: env.j2
    dest: /etc/mastodon/env
  register: mastodon_app_envfile_result

- name: Symlink mastodon envfile
  ansible.builtin.file:
    src: /etc/mastodon/env
    dest: /home/mastodon/live/.env
    state: link
    owner: mastodon

- name: Run bundler
  ansible.builtin.command: bundle install
  args:
    chdir: /home/mastodon/live
    creates: /home/mastodon/live/vendor/bundle
  become_user: mastodon

- name: Run yarn
  ansible.builtin.command: yarn install --pure-lockfile
  args:
    chdir: /home/mastodon/live
    creates: /home/mastodon/live/node_modules
  become_user: mastodon

- name: Run asset precompile
  ansible.builtin.command: bundle exec rails assets:precompile
  args:
    chdir: /home/mastodon/live
    creates: /home/mastodon/live/public/assets
  become_user: mastodon
  environment:
    RAILS_ENV: production
    NODE_OPTIONS: --openssl-legacy-provider

- ansible.builtin.import_tasks: mount.yml
  when: mastodon_app_mount_src is defined

- ansible.builtin.include_tasks:
    file: monitoring.yml
  when: "'monitoring_server' in groups"