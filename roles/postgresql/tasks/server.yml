---
- name: Install postgresql
  ansible.builtin.apt:
    name:
      - postgresql
      - libpq-dev
      - python3-psycopg2
    state: present

- name: Configure postgresql
  ansible.builtin.lineinfile:
    dest: /etc/postgresql/14/main/postgresql.conf
    regexp: ^#?{{ item.key }}
    line: "{{ item.key }} = {{ item.value }}"
  loop: "{{ config | dict2items }}"
  vars:
    config:
      listen_addresses: "'127.0.0.1,127.0.1.1,{{ wireguard_ip }}'"
      max_connections: "{{ postgresql_max_connections }}"
      shared_buffers: "{{ postgresql_shared_buffers }}"
      effective_cache_size: "{{ postgresql_effective_cache_size }}"
      maintenance_work_mem: "{{ postgresql_maintenance_work_mem }}"
      checkpoint_completion_target: "{{ postgresql_checkpoint_completion_target }}"
      wal_buffers: "{{ postgresql_wal_buffers }}"
      default_statistics_target: "{{ postgresql_default_statistics_target }}"
      random_page_cost: "{{ postgresql_random_page_cost }}"
      effective_io_concurrency: "{{ postgresql_effective_io_concurrency }}"
      work_mem: "{{ postgresql_work_mem }}"
      min_wal_size: "{{ postgresql_min_wal_size }}"
      max_wal_size: "{{ postgresql_max_wal_size }}"
  notify: Restart postgresql

- name: Create postgres role
  community.postgresql.postgresql_user:
    name: mastodon
    password: "{{ postgres_password }}"
    role_attr_flags: CREATEDB
  become_user: postgres

- name: Create postgres hba rule
  community.postgresql.postgresql_pg_hba:
    dest: /etc/postgresql/14/main/pg_hba.conf
    contype: host
    address: "{{ wireguard_network }}"
    users: mastodon
    databases: mastodon
    method: md5
  notify: Restart postgresql
